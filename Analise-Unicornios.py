# -*- coding: utf-8 -*-
"""Script Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SZIPDUCa3yh2R_jWhGfS3jmgo1vYjW6s
"""

# importação de libs
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

import warnings
warnings.filterwarnings('ignore')

# ler os dados
Base_Dados = pd.read_csv('/content/Startups+in+2021+end.csv')

#Verificar Dimensão
Base_Dados.shape

# Primeiros Registros
Base_Dados.head()

#Colunas 
Base_Dados.columns

#Renomear 
Base_Dados.rename ( columns={
    'Unnamed: 0' : 'Id',
    'Company' : 'Empresa',
    'Valuation ($B)' : 'Valor ($)',
    'Date Joined' : 'Data de Adesão',
    'Country' : 'País',
    'City' : 'Cidade',
    'Industry' : 'Setor',
    'Select Investors' : 'Investidores',
 }, inplace = True)

#Verificar tipo da informação
Base_Dados.info()

#Campos nulos
Base_Dados.isnull().sum()

#Representação gráfica dos dados acima 
plt.figure (figsize=(15,6))
plt.title ('Analisando os Campos Nulos')

sns.heatmap( Base_Dados.isnull(), cbar=False);

#Campos unicos 
Base_Dados.nunique()

#Verificar valores unicos dentro de uma coluna 
Base_Dados ['Setor'].unique()

#Valores Unicos - Rank
Base_Dados['Setor'].value_counts()

#Valores unicos por porcentagem
Base_Dados['Setor'].value_counts(normalize=True)

#Demonstração gráfica dos dados acima

plt.figure( figsize=(15,6))
plt.title('Analise dos Setores')
plt.bar( Base_Dados['Setor'].value_counts().index, Base_Dados['Setor'].value_counts()  )
plt.xticks( rotation=45, ha='right' );

Base_Dados['País'].value_counts(normalize=True)

Analise = round ( Base_Dados['País'].value_counts(normalize=True) *100, 1)

Analise

#Plot geral dos Países

plt.figure( figsize=(15,6) )
plt.title('Analise dos países geradores de Unicornios')
plt.pie(
    Analise, 
    labels = Analise.index,
    shadow=True,
    startangle=90,
    autopct='%1.1f%%'
);

#Top 10 dos Países

plt.figure( figsize=(15,6) )
plt.title('Analise dos países geradores de Unicornios')
plt.pie(
    Analise.head(10), 
    labels = Analise.index[0:10],
    shadow=True,
    startangle=90,
    autopct='%1.1f%%'
);

#Conversão para data
Base_Dados['Data de Adesão'] = pd.to_datetime( Base_Dados['Data de Adesão'])
Base_Dados['Data de Adesão'].head()

#Extrair o Ano e Mês

Base_Dados['Mes'] = pd.DatetimeIndex( Base_Dados['Data de Adesão']).month
Base_Dados['Ano'] = pd.DatetimeIndex( Base_Dados['Data de Adesão']).year

Base_Dados.head()

# Tabela Analítica (01)

Base_Dados.groupby (by=['País', 'Ano', 'Mes']).count()

# Tabela Analítica (02)

Base_Dados.groupby (by=['País', 'Ano', 'Mes']).count()['Id']

# Tabela Analítica (03)
Analise_Agrupada = Base_Dados.groupby (by=['País', 'Ano', 'Mes', 'Empresa']).count()['Id'].reset_index()
Analise_Agrupada

# Tabela Analítica (04) Selecionando apenas o Brasil

Analise_Agrupada.loc[
    Analise_Agrupada['País'] == 'Brazil'
]

#Transformando a coluna Valor (01)


Base_Dados['Valor ($)'].apply( lambda Linha: Linha.replace('$',''))

#Transformando a coluna Valor (02)


pd.to_numeric( Base_Dados['Valor ($)'].apply( lambda Linha: Linha.replace('$', '')))

#Transformando a coluna Valor (03)

Base_Dados['Valor ($)'] = pd.to_numeric( Base_Dados['Valor ($)'].apply( lambda Linha: Linha.replace('$', '')))

Base_Dados.head()

# Tabela Analítica (03)
Analise_Pais = Base_Dados.groupby( by=['País'] ).sum()['Valor ($)'].reset_index()

Analise_Pais.head()

Analise_Pais.sort_values('Valor ($)', ascending=False)

Analise_Valor = Analise_Pais.sort_values('Valor ($)', ascending=False)
Analise_Valor.head()

plt.figure( figsize=(15,6))
plt.plot( Analise_Valor['País'], Analise_Valor['Valor ($)'])
plt.title('Analise do Valor por País')
plt.xticks( rotation=45, ha= 'right');
